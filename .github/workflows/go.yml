name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v2
    
    - name: IO Scan
      id: prescription
      uses: sig-chakrava/io-scan@ac9229dba18a4ad1be231e9bf75d870f42342cae 
      with:
        stage: "IO"
        ioServerUrl: ${{secrets.IO_SERVER_URL}}
        ioServerToken: ${{secrets.IO_SERVER_TOKEN}}        
        workflowServerUrl: ${{secrets.WORKFLOW_SERVER_URL}}
        workflowServerToken: ${{secrets.WORKFLOW_SERVER_TOKEN}}
        prescriptionDownloadURL: ${{secrets.PRESCRIPTION_DOWNLOAD_URL}}
        additionalWorkflowArgs: "--polaris.url==${{secrets.POLARIS_SERVER_URL}} github_access_token=${{secrets.GH_ATOKEN}} --polaris.project.name=sig-chakrava/io --polaris.token=${{secrets.POLARIS_ACCESS_TOKEN}} --jira.token=${{secrets.JIRA_TOKEN}}"

    - name: Static Analysis with Polaris
      if: ${{steps.prescription.outputs.sastScan == 'true'}}
      run: |
        export POLARIS_SERVER_URL=${{secrets.POLARIS_SERVER_URL}}
        export POLARIS_ACCESS_TOKEN=${{secrets.POLARIS_ACCESS_TOKEN}}
        wget -q http://sipse.polaris.synopsys.com/api/tools/polaris_cli-linux64.zip
        unzip -j -o polaris_cli-linux64.zip -d /tmp
        /tmp/polaris analyze -w

    - name: Software Composition Analysis with Black Duck
      if: ${{steps.prescription.outputs.scaScan == 'true' }}
      uses: blackducksoftware/github-action@v2
      with:
         args: '--blackduck.url="${{ secrets.BLACKDUCK_URL}}" --blackduck.api.token="${{ secrets.BLACKDUCK_TOKEN}}" --detect.tools="DETECTOR" --blackduck.trust.cert=true'
         

    - name: Synopsys Intelligent Security Scan
      if: ${{steps.prescription.outputs.sastScan == 'true' || steps.prescription.outputs.scaScan == 'true'}}
      uses: sig-chakrava/io-scan@ac9229dba18a4ad1be231e9bf75d870f42342cae
      with:
        ioServerURL: ${{secrets.IO_SERVER_URL}}
        ioServerToken: ${{secrets.IO_SERVER_TOKEN}}
        workflowServerUrl: ${{secrets.WORKFLOW_SERVER_URL}}
        workflowServerToken: ${{secrets.WORKFLOW_SERVER_TOKEN}}
        prescriptionDownloadURL: ${{secrets.PRESCRIPTION_DOWNLOAD_URL}}
        additionalWorkflowArgs: "github_access_token=${{secrets.GH_ATOKEN}}"
        stage: "WORKFLOW"

    - name: Upload SARIF file
     # if: ${{steps.prescription.outputs.sastScan == 'true' }}
      uses: github/codeql-action/upload-sarif@v1
      with:
        # Path to SARIF file relative to the root of the repository
        sarif_file: github-sarif-report.json